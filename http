HTTP协议
●HTTP是一个属于应用层的面向对象的协议,由于其简捷、快速的方式,适用于分布式超媒体
信息系统。它于1990年提出，经过几年的使用与发展，得到不断地完善和扩展。目前在WWW
中使用的是HTTP/1.0的第六版, HTTP/1.1的规范化工作正在进行之中,而且HTTP-NG(Next
Generation of HT TP)的建议已经提出。
●http协议是一个TCP协议 ,采用B/S(browser/server)模型,用来传递数据( HTML文件,图片文
件,查询结果等)

HTTP协议特点
●1.支持客户/服务器模式。
●2.简单快速:客户向服务器请求服务时,只需传送请求方法和路径。请求方法常用的有GET、
HEAD、POST。 每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单,使得
HTTP服务器的程序规模小,因而通信速度很快。
●3.灵活: HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。
●4.无连接:无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求,并收到
客户的应答后,即断开连接。采用这种方式可以节省传输时间。
●5.无状态: HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意
味着如果后续处理需要前面的信息，则它必须重传,这样可能导致每次连接传送的数据量增大
。另一方面，在服务器不需要先前信息时它的应答就较快。

相关术语
●URL统-资源定位符htp://www.baidu.com/image 1/1.jpg
●URI统-资源标识符/image1/1.jpg


Web访问
一次完整的HTTP访问基 于四次请求
●1)发起请求    请求头
●2 )接受请求
●3)处理请求
●4 )响应请求   响应头


HTTP1.0与HTTP 1.1主要区别
●长连接
HTTP 1.0需要使用keep-alive参数来告知服务器端要建立一个长连接,而HTTP1.1默认支持长连接。
HTTP是基于TCP/IP协议的,创建-个TCP连接是需要经过三次握手的,有一定的开销,如果每次通讯都要重新建立连接的话,对性能有影
响。因此最好能维持一个长连接 ，可以用个长连接来发多个请求。
●节约带宽
HTTP 1.1支持只发送header信息(不带任何body信息) ,如果服务器认为客户端有权限请求服务器,则返回100 ,否则返回401。客户端如果
接受到100，才开始把请求body发送到服务器。
这样当服务器返回401的时候,客户端就可以不用发送请求body了,节约了带宽。
另外HTTP还支持传送内容的一部分。这样当客户端已经有一部分的资源后,只需要跟服务器请求另外的部分资源即可。这是支持文件断点
续传的基础。
●HOST域
现在可以web server例如tomat ,设置虚拟站点是非常常见的,也即是说, web server. 上的多个虚拟站点可以共享同一-个ip和端口。
HTTP1.0是没有hos域的, HTTP1.1才支持这个参数。
●多路复用
HTTP2.0使用了(类似epol)多路复用的技术,做到同一个连接并发处理多个请求,而且并发请求的数量比HTTP1.1大了好几个数量级。
当然HTTP1.1也可以多建立几个TCP连接,来支持处理更多并发的请求,但是创建TCP连接本身也是有开销的。
TCP连接有一个预热和保护的过程 ,先检查数据是否传送成功,一旦成功过,则慢慢加大传输速度。因此对应瞬时并发的连接,服务器的
响应就会变慢。所以最好能使用一个建立好的连接,并且这个连接可以支持瞬时并发的请求。
●数据压缩.
HTTP1.1不支持header数据的压缩, HTTP2.0使用HPACK算法对header的数据进行压缩,这样数据体积小了,在网络上传输就会更快。
●服务器推送
意思是说,当我们对支持HTTP2.0的web server请求数据的时候,服务器会顺便把一些客户端需要的资源一 起推送到客户端 ,免得客户端
再次创建连接发送请求到服务器端获取。这种方式非常合适加载静态资源。
服务器端推送的这些资源其实存在客户端的某处地方,客户端直接从本地加载这些资源就可以了,不用走网络,速度自然是快很多的。


http请求头
Hypertext Transfer Protocol
GET / HTTP/1.1\r\n
Request Method: GET
Request URI: /
Request Version: HTTP/1.1
Host: www .baidu.com\r\n
User-Agent: curl/7 .54.0\r\n
Accept: */*\rln


http响应头
HTTP/1.1 200 OK .
Server: bfe/1.0.8.18
Date: Mon, 08 Apr 2019 08:10:38 GMT
Content-Type: text/html
Content-Length: 277
Last-Modified: Mon, 13 Jun 2016 02:50:08 GMT
Connection: Keep-Alive
ETag: "575e1f60-115"
Cache- Control: private, no-cache, no-store, proxy-revalidate, no-transform
Pragma: no-cache
Accept-Ranges: bytes

常见请求方法说明
GET :请求指定的页面信息,并返回实体主体。
HEAD :只请求页面的首部。
POST :请求服务器接受所指定的文档作为对所标识的URI的新的从属实体。
PUT :从客户端向服务器传送的数据取代指定的文档的内容。
DELETE :请求服务器删除指定的页面。
OPTIONS :允许客户端查看服务器的性能。
TRACE :请求服务器在响应中的实体主体部分返回所得到的内容。
PATCH:实体中包含-个表,表中说明与该URI所表示的原内容的区别。
MOVE :请求服务器将指定的页面移至另一个网络地址。
COPY :请求服务器将指定的页面拷贝至另一个网络地址。
LINK:请求服务器建立链接关系。
UNLINK :断开链接关系。
WRAPPED :允许客户端发送经过封装的请求。

常见状态码说明
状态代码:
状态代码由3位数字组成,表示请求是否被理解或被满足。
状态描述:
状态描述给出了关于状态代码的简短的文字描述。
状态代码的第一个数字定义了 响应的类别,后面两位没有具体的分类。
第一个数字有五种可能的取值: 
1xx:指示信息一表示请求已接收 ,继续处理。
2xx:成功-表示请求已经被成功接收、理解、接受。
3xx:重定向一要完成请求必须进行更进一 步的操作。
4xx:客户端错误一请求有语法错误或请求无法实现。
5xx:服务器端错误一服务器未能实现合法的请求。

状态代码状态描述说明
200 OK客户端请求成功
400 Bad Request由于客户端请求有语法错误,不能被服务器所理解。
401 Unauthonzed请求未经授权。这个状态代码必须和WWW- Authenticate报头域一起使用
403 Forbidden服务器收到请求，但是拒绝提供服务。服务器通常会在响应正文中给出不提供服
务的原因
404 Not Found请求的资源不存在,例如,输入了错误的URL。
500 Internal Server Error服务器发生不可预期的错误,导致无法完成客户端的请求。
503 Service Unavailable服务器当前不能够处理客户端的请求,在一-段时间之后,服务器可能会
恢复正常。

